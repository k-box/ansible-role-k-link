## Deployment configuration for k-link on {{ item.key }}
version: '2'

networks:
  web:
    external:
      name: reverseproxy_web
  internal:

services:
  solr:
    image: "{{ item.value.images.solr }}"
    mem_limit: 2G
    cpu_shares: 1024
    restart: on-failure
    volumes:
      - "{{ item.value.data }}/k-search/index:/opt/solr/k-search/k-search/data:rw"
    networks:
      - internal

  ksearch:
    image: "{{ item.value.images.k_search }}"
    mem_limit: 1G
    cpu_shares: 1024
    restart: on-failure
    depends_on:
      - solr
    environment:
      - SOLR_HOST=solr
      - SOLR_NAME=k-search
      - KLINK_REGISTRY_ENABLED={{ '1' if 'k_registry' in item.value.images else '0' }}
      - KLINK_REGISTRY_API_URL=https://{{ item.key }}/registry
      - APP_ENV=prod
      - APP_DEBUG=0
      - KLINK_RETAIN_DOWNLOADED_CONTENTS=1 # keep cached files
    volumes:
      - {{ item.value.data }}/k-search/documents/:/var/www/k-search/var/data-downloads/:rw
    networks:
      - internal
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: {{ item.key }}; PathPrefix: /{path:(api|files|docs|bundles|swagger.json)}"
      - "traefik.docker.network=reverseproxy_web"

{% if 'k_registry' in item.value.images %}
  mariadb:
    mem_limit: 1G
    cpu_shares: 1024
    restart: on-failure
    image: "mariadb:10"
    environment:
      MYSQL_ROOT_PASSWORD: pw
      MYSQL_DATABASE: kregistry
      MYSQL_USER: kregistry
      MYSQL_PASSWORD: kregistry
    volumes:
      - {{ item.value.data }}/registry/database2/:/var/lib/mysql/:rw
    networks:
      - internal

  registry:
    image: "{{ item.value.images.k_registry }}"
    mem_limit: 512M
    cpu_shares: 1024
    restart: on-failure
    environment:
      REGISTRY_DB_HOST: "mariadb"
      REGISTRY_DB_USER: "kregistry"
      REGISTRY_DB_PASS: "kregistry"
      REGISTRY_DB_NAME: "kregistry"
      REGISTRY_DB_NAME: "kregistry"
      REGISTRY_HTTP_DOMAIN: "{{ item.key }}"
      REGISTRY_HTTP_BASE_PATH: "/registry"
      # secret left empty, so it will be autogenerated
      # on each startup.
      #REGISTRY_HTTP_SECRET: "changeme007"
      # if email host is left empty, all the mails will be
      # logged in stdout instead
      REGISTRY_SMTP_HOST: "{{ item.value.smtp_host | default('') }}"
      REGISTRY_SMTP_PASS: "{{ item.value.smtp_pass | default('') }}"
      REGISTRY_SMTP_FROM: "{{ item.value.smtp_from | default('registry <registry@k-box.net>') }}"
      REGISTRY_SMTP_PORT: "{{ item.value.smtp_port | default('587') }}"
      REGISTRY_ADMIN_USERNAME: "{{ lookup('keepass', '/ansible/k-links/' + item.key + '.username') }}"
      REGISTRY_ADMIN_PASSWORD: "{{ lookup('keepass', '/ansible/k-links/' + item.key + '.password') | regex_replace('\\$', '$$')}}"
    expose:
      - 80
    networks:
      - web
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: {{ item.key }}; PathPrefix: /registry"
      - "traefik.docker.network=reverseproxy_web"

{% endif %}
{% if 'video' in item.value.images %}
  video:
    mem_limit: 6G
    cpu_shares: 1024
    restart: on-failure
    image: "{{ item.value.images.video }}"
    volumes:
      - "{{ item.value.data }}/video/storage:/var/www/vss/storage"
    networks:
      - web
    environment:
      APP_URL: "https://{{ item.key }}/video/"
      APP_KEY: "12jjwz58[j48u%ehhdE&_jeu56729013"
      KLINK_REGISTRY_URL: "https://{{ item.key }}/registry/"
      TRUSTED_PROXY_IP: "0.0.0.0/0" # we are always behind a proxy
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: {{ item.key }}; PathPrefix: /video"
      - "traefik.docker.network=reverseproxy_web"

{% endif %}
{% if 'web' in item.value.images %}
  web:
    image: "{{ item.value.images.web }}"
    mem_limit: 512M
    cpu_shares: 1024
    restart: on-failure
    environment:
      SITEURL: "https://{{ item.key }}/"
      KSEARCH_URL: "https://{{ item.key }}/api/"
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: {{ item.key }}"
      - "traefik.docker.network=reverseproxy_web"

{% endif %}
{% if 'konverter' in item.value.images %}
  konverter:
    mem_limit: 2G
    cpu_shares: 1024
    restart: on-failure
    image: "{{ item.value.images.konverter }}"
    environment:
      - "DSN=host=database user=v2 password=v2 sslmode=disable"
    volumes:
      - ./konverter/mounted/institutions.json:/institutions.json:ro
      - ./konverter/mounted/credentials.json:/credentials.json:ro
      - {{ item.value.data }}/k-search/documents/:/var/documents/:rw # documents
      - /tmp/konverter:/tmp/:rw # documents cache
    networks:
      - internal
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.port=8000"
      - "traefik.frontend.rule=Host: public.klink.asia; PathPrefixStrip: /kcore/"
      - "traefik.docker.network=reverseproxy_web"

  database:
    image: postgres:9
    mem_limit: 1G
    cpu_shares: 1024
    restart: on-failure
    environment:
      - "POSTGRES_USER=v2"
      - "POSTGRES_PASSWORD=v2"
    volumes:
      - ./konverter/db/:/var/lib/postgresql/data:rw
    networks:
      - internal

{% endif %}
{% if 'redirect' in item.value %}
  slmtj-redirect:
    image: schmunk42/nginx-redirect
    mem_limit: 512M
    cpu_shares: 1024
    restart: on-failure
    environment:
    - SERVER_REDIRECT={{ item.value.redirect.to | default(item.key) }}
    labels:
    - "traefik.port=80"
    - "traefik.enable=true"
    - "traefik.frontend.rule=Host:{{ item.value.redirect.from | default("www."+item.key) }}"
    - "traefik.docker.network=reverseproxy_web"
    networks:
    - web

{% endif %}
